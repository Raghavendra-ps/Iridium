services:
    db:
        image: postgres:15-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "5433:5432"
        env_file:
            - ./.env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5

    api:
        build:
            context: .
            dockerfile: Dockerfile.app
        command: gunicorn --bind 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker app.main:app
        volumes:
            # Mount only the application code for live reloading.
            # This prevents overwriting the .venv directory.
            - ./app:/app/app
            # Mount alembic files if they exist, for migration management.
            - ./alembic:/app/alembic
            - ./alembic.ini:/app/alembic.ini
            - uploaded_files:/app/uploads
        ports:
            - "8088:8000"
        env_file:
            - ./.env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    worker:
        build:
            context: .
            dockerfile: Dockerfile.app
        command: celery -A app.infrastructure.celery_app.celery worker --loglevel=info
        volumes:
            # Mount the same specific directories for the worker.
            - ./app:/app/app
            - ./alembic:/app/alembic
            - ./alembic.ini:/app/alembic.ini
            - uploaded_files:/app/uploads
        env_file:
            - ./.env
        depends_on:
            api:
                condition: service_started
            redis:
                condition: service_healthy
            db:
                condition: service_healthy

volumes:
    postgres_data:
    redis_data:
    uploaded_files:
